@page "/edit"
@using MyBlogApp.Entities
@using MyBlogApp.Data
<div>
    <div class="d-flex align-center justify-space-around">
         <MCol Cols="8" Sm="3">
         <MTextField @bind-Value="Blogsinfo.BlogId" Label="文章Id" Clearable></MTextField>
        </MCol>
        <MCol Cols="8" Sm="3">
         <MTextField @bind-Value="Blogsinfo.BlogTitle" Label="文章标题" Clearable></MTextField>
        </MCol>
        <MCol Cols="8" Sm="3">
            <MTextField @bind-Value="Blogsinfo.Classify" Label="分类" Clearable></MTextField>
        </MCol>
        <MCol Cols="8" Sm="3">
            <MTextField @bind-Value="Blogsinfo.Label" Label="标签#标签#标签" Clearable></MTextField>
        </MCol>
        <MButton Depressed Color="primary" @onclick="TrySave">保存</MButton>
         <MButton Depressed Color="primary" Href="/">取消</MButton>
    </div>
    
    <MMarkdown Options="_options" ContentStyle="height:500px" @ref="@_editor" @bind-Html="Blogsinfo.BlogRichText" Placeholder="请输入内容"></MMarkdown>

    @*<MAlert Border="Borders.Top"
            ColoredBorder
            Type="AlertTypes.Info"
            Elevation="2"
            Class="overflow-auto mt-10">
        @_viewContent
    </MAlert>*@
</div>

@code{
    private MMarkdown _editor;

    [Parameter]
    public Blogsinfo Blogsinfo{ get; set; }

    [Parameter]
    public EventCallback<Blogsinfo> OnSaveCallback{ get; set; }

    protected override Task OnInitializedAsync()
    {
        if (Blogsinfo == null)
        {
            Blogsinfo = new Blogsinfo();
        }
        return Task.CompletedTask;
    }

    private void TrySave()
    {
        OnSaveCallback.InvokeAsync(Blogsinfo);
    }

    //private string _viewContent;

    private Dictionary<string, object> _options = new Dictionary<string, object>();

    protected override void OnInitialized()
    {
        _options.Add("counter", new
        {
            enable = true,
            type = "type"
        });
        //上传图片
        _options.Add("upload", new
        {
            url = "https://localhost:7282/edit",
            max = 2 * 1024 * 1024,
            accept = "image/*",
            multiple = true,
        });
        _options.Add("mode","sv");
        _options.Add("height",540);
        _options.Add("minHeight",300);
        _options.Add("width","100%");
        base.OnInitialized();
    }
    //BUtton的点击事件
    //public async Task GetHtmlAsync()
    //{
    //    _viewContent = await this._editor.GetHtmlAsync();
    //}
    ////图片上传路径
    //private MMarkdown _upload = new MMarkdown
    //{
    //    action = "e://visualprojects//myblogsolution//myblogapp//uploadimage//",
    //    tokenname = "authorization",
    //    name = "file",
    //    accept = "image/png,image/gif,image/jpeg,image/bmp,image/x-icon",
    //    pathkey = "path"
    //};
}